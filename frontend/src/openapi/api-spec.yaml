openapi: 3.0.3
info:
  title: Workday Activity Tracker API
  description: API for managing work tasks and generating reports.
  version: 1.0.0
servers:
  - url: /api
    description: Base path for all API endpoints

components:
  securitySchemes:
    oidc:
      type: openIdConnect
      openIdConnectUrl: https://your-oidc-provider/.well-known/openid-configuration
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        description:
          type: string
          example: "Write report"
        status:
          type: string
          enum: [TO_DO, SCHEDULED, IN_PROGRESS, PENDING, BLOCKED, COMPLETED]
          example: "IN_PROGRESS"
        createdAt:
          type: string
          format: date-time
          example: "2025-02-21T09:00:00Z"
        scheduledStart:
          type: string
          format: date-time
          nullable: true
          example: "2025-02-22T10:00:00Z"
        parentTaskId:
          type: integer
          format: int64
          nullable: true
          example: null
        activeTime:
          type: integer
          format: int64
          description: Total active time in seconds
          example: 3600
        elapsedTime:
          type: integer
          format: int64
          description: Total elapsed time in seconds since creation
          example: 86400
      required:
        - description
        - status
        - createdAt
    Note:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        taskId:
          type: integer
          format: int64
          example: 1
        content:
          type: string
          example: "Waiting for feedback from team."
        createdAt:
          type: string
          format: date-time
          example: "2025-02-21T10:00:00Z"
      required:
        - taskId
        - content
        - createdAt
    BlockReason:
      type: object
      properties:
        reason:
          type: string
          example: "Waiting for client approval."
        resolution:
          type: string
          nullable: true
          example: null
        resolvedAt:
          type: string
          format: date-time
          nullable: true
          example: null
      required:
        - reason
    Report:
      type: object
      properties:
        date:
          type: string
          format: date
          example: "2025-02-21"
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
        summary:
          type: object
          properties:
            totalTasks:
              type: integer
              example: 5
            completedTasks:
              type: integer
              example: 3
            activeTime:
              type: integer
              format: int64
              example: 7200

security:
  - oidc: []

paths:
  /tasks:
    post:
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                scheduledStart:
                  type: string
                  format: date-time
                  nullable: true
                parentTaskId:
                  type: integer
                  format: int64
                  nullable: true
              required:
                - description
      responses:
        '201':
          description: Task created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    get:
      summary: List all ongoing tasks
      responses:
        '200':
          description: List of ongoing tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

  /tasks/{id}:
    get:
      summary: Get task details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Task details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found

  /tasks/{id}/start:
    put:
      summary: Start or resume a task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Task started or resumed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid state transition

  /tasks/{id}/pause:
    put:
      summary: Pause a task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Task paused
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid state transition

  /tasks/{id}/finish:
    put:
      summary: Finish a task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Task finished
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Cannot finish due to unfinished subtasks

  /tasks/{id}/block:
    put:
      summary: Block a task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockReason'
      responses:
        '200':
          description: Task blocked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid state transition

  /tasks/{id}/resolve:
    put:
      summary: Resolve a blocked task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resolution:
                  type: string
                nextStatus:
                  type: string
                  enum: [PENDING, COMPLETED]
              required:
                - resolution
                - nextStatus
      responses:
        '200':
          description: Task resolved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid state transition

  /tasks/{id}/subtasks:
    post:
      summary: Add a subtask
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
              required:
                - description
      responses:
        '201':
          description: Subtask created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  /tasks/{id}/notes:
    post:
      summary: Add a note to a task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
              required:
                - content
      responses:
        '201':
          description: Note added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'

  /reports:
    get:
      summary: Get daily report
      parameters:
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: filter
          in: query
          schema:
            type: string
            enum: [ALL, COMPLETED, UNFINISHED, CREATED]
            default: ALL
      responses:
        '200':
          description: Daily report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
